@model Books.Models.Book

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Book", FormMethod.Post, new { enctype= "multipart/form-data"}))
{
    @Html.AntiForgeryToken()
 <div class="container">
     <div class="row">
         <div class="col-md-8">
             <div class="form-horizontal">
                 
                 @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                 @Html.HiddenFor(model => model.ID)

                 <div class="form-group">
                     @Html.LabelFor(model => model.BookName, htmlAttributes: new { @class = "control-label col-md-2" })
                     <div class="col-md-10">
                         @Html.EditorFor(model => model.BookName, new { htmlAttributes = new { @class = "form-control" } })
                         @Html.ValidationMessageFor(model => model.BookName, "", new { @class = "text-danger" })
                     </div>
                 </div>

                 <div class="form-group">
                     @Html.LabelFor(model => model.AuthorName, htmlAttributes: new { @class = "control-label col-md-2" })
                     <div class="col-md-10">
                         @Html.EditorFor(model => model.AuthorName, new { htmlAttributes = new { @class = "form-control" } })
                         @Html.ValidationMessageFor(model => model.AuthorName, "", new { @class = "text-danger" })
                     </div>
                 </div>

                 <div class="form-group">
                     @Html.LabelFor(model => model.BookCategory, htmlAttributes: new { @class = "control-label col-md-2" })
                     <div class="col-md-10">
                         @Html.EnumDropDownListFor(model => model.BookCategory, new { @class = "form-control form-select" })
                         @Html.ValidationMessageFor(model => model.BookCategory, "", new { @class = "text-danger" })
                     </div>
                 </div>

                 <div class="form-group">
                     @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                     <div class="col-md-10">
                         @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                         @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                     </div>
                 </div>

                 <div class="form-group">
                     @Html.LabelFor(model => model.BookCondition, htmlAttributes: new { @class = "control-label col-md-2" })
                     <div class="col-md-10">
                         @Html.EnumDropDownListFor(model => model.BookCondition, new { @class = "form-control form-select" })
                         @Html.ValidationMessageFor(model => model.BookCondition, "", new { @class = "text-danger" })
                     </div>
                 </div>

                 <div class="form-group">
                     @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
                     <div class="col-md-10">
                         @Html.EditorFor(model => model.ImagePath, new { htmlAttributes = new { @class = "form-control", @type = "file", @id = "imageup" } })
                         @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })
                     </div>
                 </div>

                 <div class="form-group">
                     <div class="col-md-offset-2 col-md-10">
                         <input type="submit" value="Save" class="btn btn-default" />
                     </div>
                 </div>
             </div>
         </div>

         <div class="col-md-4">
             <img src="@Url.Content(Model.ImagePath)" alt="Image" class="img-responsive" />
         </div>

     </div>
 </div>   

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
